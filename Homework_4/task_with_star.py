# Задача со ЗВЁЗДОЧКОЙ. Решать НЕ обязательно.
# Программа получает на вход натуральное число num.
# Программа должна вывести другое натуральное число, удовлетворяющее условиям:
# Новое число должно отличаться от данного ровно одной цифрой
# Новое число должно столько же знаков как исходное
# Новое число должно делиться на 3
# Новое число должно быть максимально возможным из всех таких чисел
# Например (Ввод --> Вывод) :
#
# 379 --> 879
# 15 --> 75
# 4974 --> 7974

def max_division_by_3(num):
    three = 3
    list_num=list(str(num))
    # list_num = []
    # for el in str(num):
    #     list_num.append(el)
    max_num = 9
    # Найдем сумму цифр, так как если сумма делится на 3, то все число делится на 3
    sum_num = 0
    for n in list_num:
        sum_num += int(n)
    # Проверим, сколько не хватает до деления на 3, чтобы потом знать на сколько увеличивать цифру
    div_thr = three - (sum_num % three)
    # Идем по цифрам и смотрим разницу
    for i, n in enumerate(list_num):
        if (max_num - int(n)) >= div_thr:
            list_num[i] = str(int(n) + div_thr + ((max_num - int(n) - div_thr) // three) * three)
            break
    # Собираем обратно в число и делаем интом
    new_num = int(''.join(list_num))

    # Так можно было бы сделать, если бы в list_num лежали цифры не строками, а интами
    # list_num.reverse()
    # # Собираем обратно число
    # for i, n in enumerate(list_num):
    #     new_num += n * 10**i

    return new_num

# Ниже НИЧЕГО НЕ НАДО ИЗМЕНЯТЬ

data = [
    379, 810, 981, 4974, 996, 9000, 15, 0, 9881, 9984, 9876543210, 98795432109879543210
]

test_data = [
    879, 870, 987, 7974, 999, 9900, 75, 9, 9981, 9987, 9879543210, 98798432109879543210
]


for i, d in enumerate(data):
    assert max_division_by_3(d) == test_data[i], f'С набором {d} есть ошибка, не проходит проверку'
    print(f'Тестовый набор {d} прошёл проверку')
print('Всё ок')
